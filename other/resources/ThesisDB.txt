// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table Marker {
  pos int
  allele string
  annotation_id int
  marker_id int
}

Table SegmentMarkersView {
  segment_id int
  marker_id int
}

Table SegmentData {
  segment_id int
  annotation_id int
  sequence string
}

Table Location {
  location_id integer
  region string
  state string
  city string
}

Table Isolate {
  isolate_id integer
  isolate_epi string
  serotype_id integer
  host string
  collection_date date
  location_id integer
}

Table Segment {
  segment_id integer
  isolate_id integer
  segment_type string // HA, NA, etc
  segment_epi string
  virus_name string
  epi_virus_name string
}

Table ReferenceSegment {
  reference_id integer
  serotype_id integer
  segment_type string
  dna_fasta text
  protein_fasta text
}

Table Annotation {
  reference_id integer
  annotation_id integer
  annotation_name string
  annotation_type int
  start_pos integer
  end_pos integer
}

Table Serotype {
  serotype_id integer
  name string
}

Table Mutation {
  mutation_id integer
  mutation_name string
  serotype_name string
  annotation_id integer
  annotation_name string
  position integer
  ref string
  alt string
}

/*Table MutationMetaDatata {
  mutation_id integer
  mutation_metadata_id integer
  total_count integer
  general_etc integer
}

Table HostMetaDatata {
  metadata_id integer
  human_count integer
  avian_count integer
  etc integer
}

Table ContinentMetaDatata {
  metadata_id integer
  europe_count integer
  asia_count integer
  etc integer
}

Table EtcMetaDatata {
  metadata_id integer
  etc integer
}*/

Table SegmentMutations {
  segment_id integer
  reference_id integer
  mutation_id integer
}

Table MutationMarkerView {
  mutation_id integer
  marker_id integer
}

Table Effect {
  effect_id integer
  effect_type string
  host string
  drug string
  effect_full string
}

Table Paper {
  paper_id integer
  title string
  authors string
  year integer
  journal string
  address string
  doi string
}

Table PaperAndEffectOfMarker {
  paper_effect_marker_id integer
  marker_id integer
  paper_id integer
  effect_id integer
  subtype string // ???
  in_vivo integer
  in_vitro integer
}


Ref: "Segment"."segment_id" < "SegmentMutations"."segment_id"

Ref: "SegmentMutations"."mutation_id" > "Mutation"."mutation_id"

Ref: "Mutation"."mutation_id" < "MutationMarkerView"."mutation_id"

Ref: "PaperAndEffectOfMarker"."effect_id" > "Effect"."effect_id"

Ref: "PaperAndEffectOfMarker"."paper_id" > "Paper"."paper_id"

Ref: "SegmentMutations"."reference_id" > "ReferenceSegment"."reference_id"

Ref: "ReferenceSegment"."serotype_id" > "Serotype"."serotype_id"

Ref: "Isolate"."location_id" > "Location"."location_id"

Ref: "Isolate"."serotype_id" > "Serotype"."serotype_id"

Ref: "Annotation"."reference_id" > "ReferenceSegment"."reference_id"

Ref: "Segment"."isolate_id" > "Isolate"."isolate_id"

//Ref: "MutationMetaDatata"."mutation_id" - "Mutation"."mutation_id"

//Ref: "HostMetaDatata"."metadata_id" - "MutationMetaDatata"."mutation_metadata_id"

//Ref: "ContinentMetaDatata"."metadata_id" - "MutationMetaDatata"."mutation_metadata_id"

//Ref: "EtcMetaDatata"."metadata_id" - "MutationMetaDatata"."mutation_metadata_id"

Ref: "Mutation"."annotation_id" > "Annotation"."annotation_id"

Ref: "Segment"."segment_id" < "SegmentData"."segment_id"

Ref: "SegmentData"."segment_id" < "SegmentMarkersView"."segment_id"

Ref: "SegmentMarkersView"."marker_id" > "Marker"."marker_id"

Ref: "Marker"."annotation_id" >"Annotation"."annotation_id"

Ref: "MutationMarkerView"."marker_id" > "Marker"."marker_id"

Ref: "Marker"."marker_id" < "PaperAndEffectOfMarker"."marker_id"
